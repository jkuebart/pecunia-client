# Copyright (c) 2024, Pecunia Project. All rights reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; version 2 of the
# License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301  USA

name: Build Pecunia

on:
  pull_request:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Determine version
        run: |
          describe=$(git describe --tags)
          printf 'MARKETING_VERSION=%s\n' "${describe#Release-}" >>$GITHUB_ENV

      # Without a Developer ID, we cannot access the keychain. Remove the
      # entitlement to avoid signing.
      - name: Remove Keychain entitlement
        run: plutil -remove keychain-access-groups Pecunia.entitlements

      - name: Build the app
        run: |
          xcodebuild \
              -configuration Deployment \
              -scheme Pecunia \
              -workspace Pecunia.xcworkspace \
              CODE_SIGN_IDENTITY=- \
              MARKETING_VERSION="$MARKETING_VERSION" \
              SYMROOT="$PWD/Build/Products"

      # Uploading the files directly doesn't produce a working app. Create
      # a .tar first.
      - name: Package the app
        run: |
          pax \
              -f Pecunia.tar \
              -s :Build/Products/Deployment/:: \
              -w \
              Build/Products/Deployment/Pecunia.app

      - id: upload-artifact
        name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Pecunia-${{ env.MARKETING_VERSION }}
          path: Pecunia.tar

      - name: Add comment on PR
        env:
          ARTIFACT_URL: ${{ steps.upload-artifact.outputs.artifact-url }}
        uses: actions/github-script@v7
        with:
          script: |
            const { ARTIFACT_URL, MARKETING_VERSION } = process.env;

            await github.rest.issues.createComment({
                ...context.repo,
                body: `Download [Pecunia-${MARKETING_VERSION}](${ARTIFACT_URL}).`,
                issue_number: context.issue.number,
            });
